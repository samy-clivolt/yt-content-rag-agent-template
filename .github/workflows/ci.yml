name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yt_rag_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Setup test database
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d yt_rag_test -f scripts/setup-database.sql

    - name: Create test .env file
      run: |
        cat > .env << EOF
        POSTGRES_CONNECTION_STRING=postgresql://postgres:postgres@localhost:5432/yt_rag_test
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY || 'test-key' }}
        ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY || 'test-key' }}
        YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY || 'test-key' }}
        APIFY_API_TOKEN=${{ secrets.APIFY_API_TOKEN || 'test-key' }}
        EOF

    - name: TypeScript Check
      run: npx tsc --noEmit

    - name: Build
      run: pnpm run build

    - name: Run tests
      run: pnpm test || echo "No tests configured yet"
      env:
        NODE_ENV: test